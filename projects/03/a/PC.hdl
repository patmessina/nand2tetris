// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

      // else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
      Inc16(in=lastout, out=tincval);
      Mux16(sel=inc, a=lastout, b=tincval, out=incval);

      // else if (load[t] == 1)  out[t+1] = in[t]
      Mux16(sel=load, a=incval, b=in, out=loaded);

      // if (reset[t] == 1) out[t+1] = 0
      Mux16(sel=reset, a=loaded, b=false, out=resetval);

      // else out[t+1] = out[t]
      //  should fall through thus have load=true
      Register(in=resetval, load=true, out=out, out=lastout);

}
